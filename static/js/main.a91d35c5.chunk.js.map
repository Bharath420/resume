{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","createElement","className","href","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0LAiGeA,MA5Ff,WACE,OACEC,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,UAAQC,UAAU,UAChBF,IAAAC,cAAA,UAAI,2BACJD,IAAAC,cAAA,SAAG,4BAGLD,IAAAC,cAAA,WAASC,UAAU,gBACjBF,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,UAAe,4BAC1BD,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,UAAe,iBAC1BD,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,aAAkB,IAACD,IAAAC,cAAA,KAAGE,KAAK,4CAA2C,qBACjFH,IAAAC,cAAA,SAAGD,IAAAC,cAAA,cAAQ,WAAgB,IAACD,IAAAC,cAAA,KAAGE,KAAK,iCAAgC,gBAGtEH,IAAAC,cAAA,WAASC,UAAU,wBACjBF,IAAAC,cAAA,UAAI,wBACJD,IAAAC,cAAA,SAAG,4YAKLD,IAAAC,cAAA,WAASC,UAAU,UACjBF,IAAAC,cAAA,UAAI,oBACJD,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,oBACJD,IAAAC,cAAA,UAAI,qDACJD,IAAAC,cAAA,UAAI,4EACJD,IAAAC,cAAA,UAAI,0EACJD,IAAAC,cAAA,UAAI,qDACJD,IAAAC,cAAA,UAAI,+EACJD,IAAAC,cAAA,UAAI,0EACJD,IAAAC,cAAA,UAAI,mFACJD,IAAAC,cAAA,UAAI,+DAIRD,IAAAC,cAAA,WAASC,UAAU,aACjBF,IAAAC,cAAA,UAAI,aACJD,IAAAC,cAAA,OAAKC,UAAU,UACbF,IAAAC,cAAA,UAAI,4FACJD,IAAAC,cAAA,SAAGD,IAAAC,cAAA,UAAI,4BAIXD,IAAAC,cAAA,WAASC,UAAU,kBACjBF,IAAAC,cAAA,UAAI,kBACJD,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,4CACJD,IAAAC,cAAA,UAAI,iCACJD,IAAAC,cAAA,UAAI,mCAIRD,IAAAC,cAAA,WAASC,UAAU,cACjBF,IAAAC,cAAA,UAAI,2BACJD,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,gDACJD,IAAAC,cAAA,SAAGD,IAAAC,cAAA,UAAI,2CACPD,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,qLACJD,IAAAC,cAAA,UAAI,gGACJD,IAAAC,cAAA,UAAI,8MACJD,IAAAC,cAAA,UAAI,gIACJD,IAAAC,cAAA,UAAI,wHAKRD,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,UAAI,uDACJD,IAAAC,cAAA,SAAGD,IAAAC,cAAA,UAAI,8CACPD,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,gJACJD,IAAAC,cAAA,UAAI,iJACJD,IAAAC,cAAA,UAAI,2LACJD,IAAAC,cAAA,UAAI,0LACJD,IAAAC,cAAA,UAAI,sIAOVD,IAAAC,cAAA,cACED,IAAAC,cAAA,SAAG,+CC/EIG,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrB,IAAAC,cAACD,IAAMsB,WAAU,KACftB,IAAAC,cAACF,EAAG,QAORK","file":"static/js/main.a91d35c5.chunk.js","sourcesContent":["// src/App.js\n\nimport React from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"resume-container\">\n      <header className=\"header\">\n        <h1>Bharath Madvar's Resume</h1>\n        <p>Cloud & DevOps Engineer</p>\n      </header>\n\n      <section className=\"contact-info\">\n        <h2>Contact Information</h2>\n        <p><strong>Email:</strong> bharathmadvar@gmail.com</p>\n        <p><strong>Phone:</strong> 732-783-8757</p>\n        <p><strong>LinkedIn:</strong> <a href=\"https://www.linkedin.com/in/yourprofile/\">LinkedIn Profile</a></p>\n        <p><strong>GitHub:</strong> <a href=\"https://github.com/Bharath420\">Bharath420</a></p>\n      </section>\n\n      <section className=\"professional-summary\">\n        <h2>Professional Summary</h2>\n        <p>\n          Cloud & DevOps Engineer with 8 years of experience leading a dedicated team that specializes in tool building, Kubernetes administration in Docker EE, CI/CD pipeline design and support, monitoring, application administration, and container platform design and administration. Complex problem-solver with an analytical and driven mindset. Holding Terraform and Kubernetes Admin Certification.\n        </p>\n      </section>\n\n      <section className=\"skills\">\n        <h2>Technical Skills</h2>\n        <ul>\n          <li>CLOUD - AWS, GCP</li>\n          <li>Infrastructure as code: Terraform, CloudFormation</li>\n          <li>Operating Systems: Linux (Red Hat, CentOS & SUSE), Ubuntu, HPUX, Windows</li>\n          <li>Scripting: Shell Scripting, Groovy, Python, Ruby, Perl, and PowerShell</li>\n          <li>Build Tools: Maven, Gradle, Sonar, Nexus, and Ant</li>\n          <li>Version Control Tools: GIT, GITHUB, GitLab, Subversion (SVN), and Bitbucket</li>\n          <li>Orchestration Tools: Kubernetes, Docker Swarm, and Google Cloud Engine</li>\n          <li>Networking Protocols: TCP/IP, DNS, DHCP, Cisco Routers/Switches, WAN, LAN, SMTP</li>\n          <li>Monitoring Tools: Nagios, AWS CloudWatch, Splunk, and ELK</li>\n        </ul>\n      </section>\n\n      <section className=\"education\">\n        <h2>Education</h2>\n        <div className=\"school\">\n          <h3>Master’s in Computer Science and Web Development Technology - Wilmington University</h3>\n          <p><em>New Castle, DE | 2017</em></p>\n        </div>\n      </section>\n\n      <section className=\"certifications\">\n        <h2>Certifications</h2>\n        <ul>\n          <li>Certified Kubernetes Administrator (CKA)</li>\n          <li>Certified Terraform Associate</li>\n          <li>Certified AWS DevOps Engineer</li>\n        </ul>\n      </section>\n\n      <section className=\"experience\">\n        <h2>Professional Experience</h2>\n        <div className=\"job\">\n          <h3>Software Engineer DevOps / GCP - Lowe’s</h3>\n          <p><em>Charlotte, NC | October 2022 - Present</em></p>\n          <ul>\n            <li>Implemented a production-ready, load-balanced, highly available, fault-tolerant, GCP Kubernetes infrastructure from scratch using Akamai, GLB, F5, and Palo Alto application VMS.</li>\n            <li>Developed, maintained, and enhanced post and pre-development scripts using Shell and Python.</li>\n            <li>Managed and configured the GCP Service account, IAM policies, Google Cloud Virtual Private Cloud (VPC), subnets, Compute, Storage, Networking, GCS buckets, GKE using Terraform as Infrastructure as code.</li>\n            <li>Created dynamic routing/load balancing capability by enabling large application scaling, using Istio-gateway serves gateway.</li>\n            <li>Developed and managed the LEC with Loci template to perform end-to-end self-service deployments to the developers.</li>\n          </ul>\n        </div>\n        {/* Add more jobs as needed */}\n        \n        <div className=\"job\">\n          <h3>AWS DevOps Software Engineer - TSYS Global Payments</h3>\n          <p><em>Alpharetta, GA | June 2021 - October 2022</em></p>\n          <ul>\n            <li>Worked on building the engineering efficiency initiatives and will design & implement continuous integration, continuous delivery pipelines.</li>\n            <li>Provisioned a production-ready AWS cloud infrastructure and microservices container orchestration (EKS) using Cloud Formation Template (CFT).</li>\n            <li>Managed Amazon Web Services like VPC, EKS, EFS Storages, EC2, ECS, S3, RDS, DynamoDB, Route53, ELB, Auto-Scaling, SQS, SNS, CloudWatch, KMS, IAM, AWS gateways through AWS Console/CLI.</li>\n            <li>Integrated Kubernetes with HasicorpVault to write the application secrets and configuration file at runtime for k8s service using init and sidecar injectors between the applications.</li>\n            <li>Created reproducible builds of the Kubernetes applications by managing Kubernetes manifest files and releases of Helm packages.</li>\n          </ul>\n        </div>\n\n        {/* Add more jobs as needed */}\n      </section>\n\n      <footer>\n        <p>Created with React | © Bharath Madvar</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}